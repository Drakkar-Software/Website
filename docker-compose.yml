version: '3.4'

services:
  web:
    image: drakkarsoftware/nginx
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    environment:
      - WEB_DOMAIN=.drakkar-software.octobot.online
      - APP_HOST=app
      - RAILS_ROOT=/usr/src/app
    volumes:
      - app-public:/usr/src/app
    ports:
      - 80:80
    links:
      - app
  db:
    environment:
      - POSTGRES_PASSWORD=my-pg-password
      - POSTGRES_USER=postgres
      - POSTGRES_HOST=0.0.0.0
    hostname: db.drakkar-software.octobot.online
    image: postgres:11-alpine
    ports:
      - 5432:5432
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - /data/postgresql:/var/lib/postgresql/data

  app:
    image: repo.treescale.com/drakkarsoftware/drakkar-software-website:development
#    build:
#      context: .
#      args:
#        - FOLDERS_TO_REMOVE=spec node_modules vendor/assets lib/assets tmp/cache
#        - BUNDLE_WITHOUT=development:test
#        - RAILS_ENV=production
    environment:
      - PRODUCTION_DATABASE=db
      - DATABASE_PASSWORD=my-pg-password
      - DATABASE_USERNAME=postgres
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - RAILS_ENV=production
      - RAILS_MAX_THREADS=5
      - SECRET_KEY_BASE=my-secret-access-key
    hostname: drakkar-software.octobot.online
    links:
      - db
    ports:
      - 3000:3000
    restart: always
    volumes:
      - app-public:/usr/src/app
    healthcheck:
      test: ["CMD-SHELL", "nc -z 127.0.0.1 3000 || exit 1"]
      interval: 5m
      start_period: 1m

volumes:
  app-public:
